name: CI

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


# Linux and Osx build definitions are separate, because they can involve
# sufficiently different requirements as projects evolve that abstracting
# them into one single action would just create complexity. #aha #wet

jobs:
  unittest_linux_x64:
    name: unittest-linux-x64
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            compiler: gcc
          - os: ubuntu-22.04
            compiler: clang

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/unittest-unix-x64
        with:
          compiler: ${{ matrix.compiler }}

  unittest_linux_arm:
    name: unittest-linux-arm
    strategy:
      matrix:
        include:
          - dockerimage: ubuntu22.04
            compiler: gcc
          - dockerimage: ubuntu22.04

            compiler: clang

    # when running arm jobs, we want a linux host. 
    # the real environment is defined by dockerimage
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/unittest-unix-arm
        with:
          compiler: ${{ matrix.compiler }}
          dockerimage:  ${{ matrix.dockerimage }}

  unittest_macosx_x64:
    name: unittests-macosx-x64
    strategy:
      matrix:
        include:
          - compiler: gcc
          - compiler: clang

    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/unittest-unix-x64
        with:
          compiler: ${{ matrix.compiler }}

  unittest_windows_x64:
    name: unittest-windows-x64
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/compile-windows-x64

  # unittest_zig:
  #   name: make-${{matrix.target}}-binaries-with-zig

  #   strategy:
  #     matrix:
  #       include:
  #         # osx
  #         - target: aarch64-macos-none
  #           os: osx
  #           output: libfzf.so
  #         - target: x86_64-macos-none
  #           os: osx
  #           output: libfzf.so

  #   runs-on: ubuntu-latest

  #   steps:

  #     - uses: actions/checkout@v3

  #     - uses: ./.github/actions/with-zig
  #       with:
  #         arch: ${{ matrix.target }}
  #         output: ${{ matrix.output }}
  #         run: make test

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: ${{matrix.os}}-${{ matrix.target }}-zig
  #         path: build/*


  e2etest_linux_x64:
    name: e2etest-linux-x64
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            url: https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/e2etest-unix-x64
        with:
          url: ${{ matrix.url }}

  e2etest_macos_x64:
    name: e2etest-macos-x64
    strategy:
      matrix:
        include:
          - os: macos-10.15
            url: https://github.com/neovim/neovim/releases/download/nightly/nvim-macos.tar.gz

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/e2etest-unix-x64
        with:
          url: ${{ matrix.url }}

